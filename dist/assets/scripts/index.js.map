{"version":3,"names":[],"mappings":"","sources":["index.js"],"sourcesContent":["/* globals KeenSlider, noUiSlider, Fancybox, Swiper, anime */\n\n/**\n * Components\n *\n * 01.Menu\n * 02.Tabs\n * 03.Detail\n * 04.Counter\n * 05.Product gallery\n * 06.Fullscreen slider\n * 07.Filters popup\n */\n\n// Menu component\nclass Menu {\n\tconstructor(target = '.js-menu') {\n\t\tthis.menu = target instanceof HTMLElement ? target : document.querySelector(target);\n\t\tif (!this.menu) return;\n\n\t\tthis.state = {\n\t\t\tisShow: false,\n\t\t};\n\n\t\tthis.menuHoverTriggers = this.menu.querySelectorAll('.js-menu__hover-trigger');\n\t\tthis.menuHideTriggers = this.menu.querySelectorAll('.js-menu__hide-trigger');\n\t\tthis.menuBurger = document.querySelector('.js-menu-burger');\n\t\tthis.header = document.querySelector('.js-header');\n\n\t\tthis.destroy = this.destroy.bind(this);\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.show = this.show.bind(this);\n\t\tthis.hide = this.hide.bind(this);\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis?.menuBurger.addEventListener('click', this.toggle);\n\t\tthis?.menuHideTriggers.forEach((trigger) => {\n\t\t\ttrigger.addEventListener('click', this.hide);\n\t\t});\n\n\t\tthis?.menuHoverTriggers.forEach((trigger) => {\n\t\t\ttrigger.addEventListener('mouseenter', () => {\n\t\t\t\tif (this.header) this.header.classList.add('is-hovered');\n\t\t\t});\n\t\t\ttrigger.addEventListener('mouseleave', () => {\n\t\t\t\tif (this.header) this.header.classList.remove('is-hovered');\n\t\t\t});\n\t\t});\n\t}\n\n\tdestroy() {\n\t\tthis?.menuBurger.removeEventListener('click', this.toggle);\n\t\tthis?.menuHideTriggers.forEach((trigger) => {\n\t\t\ttrigger.removeEventListener('click', this.hide);\n\t\t});\n\t}\n\n\ttoggle() {\n\t\tif (this.state.isShow) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n\n\tshow() {\n\t\tthis.state.isShow = true;\n\t\tthis.menuBurger.classList.add('is-active');\n\t\tthis.header.classList.add('is-active');\n\t\tthis.menu.classList.add('is-active');\n\t\tdocument.body.classList.add('is-lock');\n\t}\n\n\thide() {\n\t\tthis.state.isShow = false;\n\t\tthis.menuBurger.classList.remove('is-active');\n\t\tthis.header.classList.remove('is-active');\n\t\tthis.menu.classList.remove('is-active');\n\t\tdocument.body.classList.remove('is-lock');\n\t}\n}\n\n// Tabs component\nclass Tabs {\n\tconstructor(target = '.js-tabs') {\n\t\tthis.tabs = target instanceof HTMLElement ? target : document.querySelector(target);\n\t\tif (!this.tabs) return;\n\n\t\tthis.buttons = this.tabs.querySelectorAll('.js-tabs-button');\n\t\tthis.content = this.tabs.querySelectorAll('.js-tabs-content');\n\n\t\tthis.change = this.change.bind(this);\n\t\tthis.changeActiveClass = this.changeActiveClass.bind(this);\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tconsole.log(this.buttons[0].getAttribute('data-tab-id'));\n\n\t\tif (this.buttons.length) {\n\t\t\tthis.change(this.buttons[0].getAttribute('data-tab-id'));\n\t\t}\n\n\t\tthis.buttons.forEach((button) => {\n\t\t\tbutton.addEventListener('click', () => {\n\t\t\t\tthis.change(button.getAttribute('data-tab-id'));\n\t\t\t});\n\t\t});\n\t}\n\n\tchange(id) {\n\t\tthis.buttons.forEach((item) => this.changeActiveClass(item, id));\n\t\tthis.content.forEach((item) => this.changeActiveClass(item, id));\n\t}\n\n\tchangeActiveClass(item, id) {\n\t\tconsole.log(item, id);\n\n\t\tif (item.getAttribute('data-tab-id' === id)) item.classList.add('is-active');\n\t\tif (item.getAttribute('data-tab-id' !== id)) item.classList.remove('is-active');\n\t}\n}\n\n// Detail component\nclass Detail {\n\tconstructor(target = '.js-detail') {\n\t\tthis.detail = target instanceof HTMLElement ? target : document.querySelector(target);\n\t\tif (!this.detail) return;\n\n\t\tthis.state = {\n\t\t\tisShow: false,\n\t\t};\n\n\t\tthis.detailButton = this.detail.querySelector('.js-detail__button');\n\t\tthis.detailBody = this.detail.querySelector('.js-detail__body');\n\n\t\tthis.destroy = this.destroy.bind(this);\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.show = this.show.bind(this);\n\t\tthis.hide = this.hide.bind(this);\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tif (this.detail.getAttribute('data-detail-initial-state') === 'show') {\n\t\t\tsetTimeout(() => this.show(0), 200);\n\t\t} else {\n\t\t\tthis.hide(0);\n\t\t}\n\n\t\tthis.detailButton.addEventListener('click', this.toggle);\n\t}\n\n\tdestroy() {\n\t\tanime.animate(this.detailBody, {\n\t\t\theight: (elem) => elem.scrollHeight,\n\t\t\tduration: 0,\n\t\t});\n\n\t\tthis.detailButton.removeEventListener('click', this.toggle);\n\t}\n\n\ttoggle() {\n\t\tif (this.state.isShow) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n\n\thide(duration = 200) {\n\t\tthis.state.isShow = false;\n\t\tthis.detailButton.classList.remove('is-active');\n\t\tthis.detailBody.classList.remove('is-active');\n\n\t\tanime.animate(this.detailBody, {\n\t\t\theight: 0,\n\t\t\tduration,\n\t\t});\n\t}\n\n\tshow(duration = 200) {\n\t\tthis.state.isShow = true;\n\t\tthis.detailButton.classList.add('is-active');\n\t\tthis.detailBody.classList.add('is-active');\n\n\t\tanime.animate(this.detailBody, {\n\t\t\theight: (elem) => elem.scrollHeight,\n\t\t\tduration,\n\t\t});\n\t}\n}\n\n// Counter component\nclass Counter {\n\tconstructor(target = '.js-counter') {\n\t\tthis.counter = target instanceof HTMLElement ? target : document.querySelector(target);\n\t\tif (!this.counter) return;\n\n\t\tthis.state = {\n\t\t\tvalue: 0,\n\t\t};\n\n\t\tthis.counterIncrease = this.counter.querySelector('.js-counter__increase');\n\t\tthis.counterDecrease = this.counter.querySelector('.js-counter__decrease');\n\t\tthis.counterValue = this.counter.querySelector('.js-counter__value');\n\n\t\tthis.increase = this.increase.bind(this);\n\t\tthis.decrease = this.decrease.bind(this);\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tif (!this.counterValue) return;\n\n\t\tthis.state.value = Number(this.counterValue.value) || 0;\n\n\t\tthis?.counterIncrease?.addEventListener('click', this.increase);\n\t\tthis?.counterDecrease?.addEventListener('click', this.decrease);\n\t}\n\n\tdestroy() {\n\t\tthis?.counterIncrease?.removeEventListener('click', this.increase);\n\t\tthis?.counterDecrease?.removeEventListener('click', this.decrease);\n\t}\n\n\tincrease() {\n\t\tif (!this.counterValue) return;\n\n\t\tthis.state.value += 1;\n\t\tthis.counterValue.value = this.state.value;\n\t}\n\n\tdecrease() {\n\t\tif (!this.counterValue || this.state.value <= 0) return;\n\n\t\tthis.state.value -= 1;\n\t\tthis.counterValue.value = this.state.value;\n\t}\n}\n\n// Product gallery component\nclass ProductGallery {\n\tconstructor(target = '.js-product-gallery') {\n\t\tthis.gallery = target instanceof HTMLElement ? target : document.querySelector(target);\n\t\tif (!this.gallery) return;\n\n\t\tthis.mainSlider = null;\n\t\tthis.thumbSlider = null;\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tconst mainSliderElement = this.gallery.querySelector('.js-product-gallery__main-slider');\n\t\tconst thumbSliderElement = this.gallery.querySelector('.js-product-gallery__thumb-slider');\n\n\t\tif (!mainSliderElement) return;\n\n\t\tthis.mainSlider = new KeenSlider(mainSliderElement, {\n\t\t\tdisabled: false,\n\t\t\tdrag: false,\n\t\t\tslides: {\n\t\t\t\tperView: 1,\n\t\t\t\tspacing: 0,\n\t\t\t},\n\t\t\tbreakpoints: {\n\t\t\t\t'(min-width: 64rem)': {\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tslides: {\n\t\t\t\t\t\tperView: 99,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdetailsChanged: (s) => {\n\t\t\t\ts.slides.forEach((element, idx) => {\n\t\t\t\t\telement.style.opacity = s.track.details.slides[idx].portion;\n\t\t\t\t\telement.style.zIndex = s.track.details.slides[idx].portion + 1;\n\t\t\t\t});\n\t\t\t},\n\t\t\trenderMode: 'custom',\n\t\t});\n\n\t\tif (thumbSliderElement && this.mainSlider) {\n\t\t\tthis.thumbSlider = new KeenSlider(\n\t\t\t\tthumbSliderElement,\n\t\t\t\t{\n\t\t\t\t\tinitial: 0,\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tslides: {\n\t\t\t\t\t\tperView: 4,\n\t\t\t\t\t\tspacing: 10,\n\t\t\t\t\t},\n\t\t\t\t\tbreakpoints: {\n\t\t\t\t\t\t'(min-width: 64rem)': {\n\t\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[this.ThumbnailPlugin(this.mainSlider)],\n\t\t\t);\n\t\t}\n\t}\n\n\tThumbnailPlugin(main) {\n\t\treturn (slider) => {\n\t\t\tfunction removeActive() {\n\t\t\t\tslider.slides.forEach((slide) => {\n\t\t\t\t\tslide.classList.remove('active');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction addActive(idx) {\n\t\t\t\tslider.slides[idx].classList.add('active');\n\t\t\t}\n\n\t\t\tfunction addClickEvents() {\n\t\t\t\tslider.slides.forEach((slide, idx) => {\n\t\t\t\t\tslide.addEventListener('click', () => {\n\t\t\t\t\t\tmain.moveToIdx(idx);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tslider.on('created', () => {\n\t\t\t\taddActive(slider.track.details.rel);\n\t\t\t\taddClickEvents();\n\t\t\t\tmain.on('animationStarted', (main) => {\n\t\t\t\t\tremoveActive();\n\t\t\t\t\tconst next = main.animator.targetIdx || 0;\n\t\t\t\t\taddActive(main.track.absToRel(next));\n\t\t\t\t\tslider.moveToIdx(Math.min(slider.track.details.maxIdx, next));\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n}\n\n// Fullscreen slider\nclass FullscreenSlider {\n\tconstructor(mainSelector, footerSelector) {\n\t\tthis.mainSelector = mainSelector;\n\t\tthis.footerSelector = footerSelector;\n\t\tthis.mainSwiper = null;\n\t\tthis.footerSwiper = null;\n\t\tthis.headingAnimation = null; // Храним анимацию\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.prepareFirstSlideAnimation();\n\t\tthis.initMainSlider();\n\t\tthis.initFooterSlider();\n\t}\n\n\tinitMainSlider() {\n\t\tthis.mainSwiper = new Swiper(this.mainSelector, {\n\t\t\tdirection: 'vertical',\n\t\t\tmousewheel: true,\n\t\t\tspeed: 800,\n\t\t\teffect: 'creative',\n\t\t\tresistance: false,\n\t\t\tcreativeEffect: {\n\t\t\t\tprev: { translate: [0, 0, -0.5] },\n\t\t\t\tnext: { translate: [0, '100%', 0] },\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tslideChange: () => this.onSlideChange(),\n\t\t\t},\n\t\t});\n\n\t\tthis.onSlideChange();\n\t}\n\n\tinitFooterSlider() {\n\t\tthis.footerSwiper = new Swiper(this.footerSelector, {\n\t\t\tdirection: 'vertical',\n\t\t\tslidesPerView: 'auto',\n\t\t\tfreeMode: true,\n\t\t\tresistance: false,\n\t\t\tmousewheel: {\n\t\t\t\treleaseOnEdges: true,\n\t\t\t},\n\t\t\tnested: true,\n\t\t});\n\t}\n\n\tprepareFirstSlideAnimation() {\n\t\tconst firstSlide = document.querySelector(`${this.mainSelector} .swiper-slide:first-child`);\n\t\tif (!firstSlide) return;\n\n\t\tconst heading = firstSlide.querySelector('.fullscreen-slider__slide-heading');\n\t\tif (!heading) return;\n\n\t\tconst { chars } = anime.text.split(heading, { chars: true, words: true });\n\n\t\tthis.headingAnimation = anime.animate(chars, {\n\t\t\topacity: { from: 0, to: 1 },\n\t\t\tdelay: anime.stagger(100),\n\t\t\tease: 'inQuad',\n\t\t\tautoplay: false,\n\t\t});\n\t}\n\n\tonSlideChange() {\n\t\tconst header = document.querySelector('header');\n\t\tif (!header) return;\n\n\t\tconst activeSlide = this.mainSwiper.slides[this.mainSwiper.activeIndex];\n\t\tif (!activeSlide) return;\n\n\t\tconst headerColor = activeSlide.getAttribute('data-header-color') || '';\n\n\t\theader.className = header.className\n\t\t\t.split(' ')\n\t\t\t.filter((c) => !c.startsWith('header--'))\n\t\t\t.join(' ');\n\n\t\tif (headerColor) {\n\t\t\theader.classList.add(`header--${headerColor}`);\n\t\t}\n\n\t\tif (this.mainSwiper.activeIndex === 0 && this.headingAnimation) {\n\t\t\tthis.headingAnimation.restart();\n\t\t}\n\t}\n}\n\n// Filters popup\nclass FiltersPopup {\n\tconstructor(target = '.js-filters-popup') {\n\t\tthis.popup = target instanceof HTMLElement ? target : document.querySelector(target);\n\t\tif (!this.popup) return;\n\n\t\tthis.showTrigger = document.querySelector('.js-filters-popup-show');\n\t\tthis.hideTrigger = document.querySelector('.js-filters-popup-hide');\n\n\t\tthis.show = this.show.bind(this);\n\t\tthis.hide = this.hide.bind(this);\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.showTrigger.addEventListener('click', this.show);\n\t\tthis.hideTrigger.addEventListener('click', this.hide);\n\t}\n\n\tdestroy() {\n\t\tthis.showTrigger.removeEventListener('click', this.show);\n\t\tthis.hideTrigger.removeEventListener('click', this.hide);\n\t}\n\n\tshow() {\n\t\tthis.popup.classList.add('is-active');\n\t}\n\n\thide() {\n\t\tthis.popup.classList.remove('is-active');\n\t}\n}\n\n/**\n * Utility functions\n */\n\nfunction initSmoothScrollLinks() {\n\tdocument.addEventListener('click', function (e) {\n\t\tconst link = e.target.closest('a.js-link-anchor[href^=\"#\"]');\n\t\tif (!link) return;\n\n\t\tconst targetId = link.getAttribute('href').substring(1);\n\t\tif (!targetId) return;\n\n\t\tconst targetElement = document.getElementById(targetId);\n\t\tif (!targetElement) return;\n\n\t\te.preventDefault();\n\n\t\ttargetElement.scrollIntoView({\n\t\t\tbehavior: 'smooth',\n\t\t\tblock: 'start',\n\t\t});\n\t});\n}\n\n/**\n * Main function\n */\nwindow.addEventListener('DOMContentLoaded', () => {\n\tnew Menu();\n\tnew FiltersPopup();\n\tnew ProductGallery();\n\tnew FullscreenSlider('#fullscreen-slider', '#fullscreen-slider-footer');\n\n\tdocument.querySelectorAll('.js-tabs').forEach((elem) => new Tabs(elem));\n\tdocument.querySelectorAll('.js-detail').forEach((elem) => new Detail(elem));\n\tdocument.querySelectorAll('.js-counter').forEach((elem) => new Counter(elem));\n\n\tinitSmoothScrollLinks();\n\n\tFancybox.bind('[data-fancybox]', {\n\t\tCarousel: {\n\t\t\tThumbs: false,\n\t\t\tToolbar: {\n\t\t\t\tdisplay: {\n\t\t\t\t\tleft: [],\n\t\t\t\t\tmiddle: [],\n\t\t\t\t\tright: ['close'],\n\t\t\t\t},\n\t\t\t},\n\t\t\tZoomable: {\n\t\t\t\tPanzoom: {\n\t\t\t\t\tminScale: 0.5,\n\t\t\t\t\tclickAction: 'toggleCover',\n\t\t\t\t\tmouseMoveFactor: 1,\n\t\t\t\t\tstartScale: 'cover',\n\t\t\t\t},\n\t\t\t},\n\t\t\tVideo: {\n\t\t\t\thtml5videoTpl: `\n\t\t\t\t\t<video class=\"f-html5video\" playsinline loop muted poster=\"{{poster}}\">\n\t\t\t\t\t\t<source src=\"{{src}}\" type=\"{{format}}\" />Sorry, your browser doesn't support embedded videos.\n\t\t\t\t\t</video>\n\t\t\t\t`,\n\t\t\t},\n\t\t},\n\t});\n\n\twindow.addEventListener('scroll', () => {\n\t\tconst header = document.querySelector('.js-header');\n\t\tif (window.scrollY > 5) {\n\t\t\theader.classList.add('is-scrolled');\n\t\t} else {\n\t\t\theader.classList.remove('is-scrolled');\n\t\t}\n\t});\n\n\t/**\n\t * Ranger\n\t */\n\tdocument.querySelectorAll('.js-ranger').forEach((ranger) => {\n\t\tconst rangerSlider = ranger.querySelector('.js-ranger__slider');\n\t\tconst rangerValue = ranger.querySelector('.js-ranger__value');\n\t\tconst rangerInputMin = ranger.querySelector('.js-ranger__input-min');\n\t\tconst rangerInputMax = ranger.querySelector('.js-ranger__input-max');\n\n\t\tconst startMin = Number(rangerInputMin.value) || 0;\n\t\tconst startMax = Number(rangerInputMax.value) || 100;\n\n\t\tnoUiSlider.create(rangerSlider, {\n\t\t\tstart: [startMin, startMax],\n\t\t\tconnect: true,\n\t\t\trange: {\n\t\t\t\tmin: startMin,\n\t\t\t\tmax: startMax,\n\t\t\t},\n\t\t});\n\n\t\trangerSlider.noUiSlider.on('update', (values) => {\n\t\t\tconst min = Math.round(values[0]);\n\t\t\tconst max = Math.round(values[1]);\n\n\t\t\trangerValue.textContent = `Цены: ${min} ₽ – ${max} ₽`;\n\n\t\t\trangerInputMin.value = min;\n\t\t\trangerInputMax.value = max;\n\t\t});\n\n\t\trangerInputMin.addEventListener('change', () => {\n\t\t\tlet val = Number(rangerInputMin.value);\n\t\t\tlet maxVal = Number(rangerInputMax.value);\n\t\t\tif (val < 0) val = 0;\n\t\t\tif (val > maxVal) val = maxVal;\n\t\t\trangerSlider.noUiSlider.set([val, null]);\n\t\t});\n\n\t\trangerInputMax.addEventListener('change', () => {\n\t\t\tlet val = Number(rangerInputMax.value);\n\t\t\tlet minVal = Number(rangerInputMin.value);\n\t\t\tif (val > 100) val = 100;\n\t\t\tif (val < minVal) val = minVal;\n\t\t\trangerSlider.noUiSlider.set([null, val]);\n\t\t});\n\t});\n});\n"],"file":"index.js"}